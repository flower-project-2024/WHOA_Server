# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Spring Boot & Gradle CI/CD 

on:
 push:
   branches: [ "main" ]
 pull_request:
   branches: [ "main" ]

jobs:
  build-with-gradle:
    environment: main
    runs-on: ubuntu-latest
    steps:
    - name: Checkout-source code
      uses: actions/checkout@v3

    - name: JDK 17 설치
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Make application.yml
      run: |
        cd ./src/main/resources
        
        touch ./application.yml
        touch ./application-prod.yml
        touch ./application-credentials.yml
        touch ./application-rds.yml
        touch ./application-s3.yml
        touch ./application-crawl.yml
        
        echo "$APPLICATION" > ./application.yml
        echo "$APPLICATION_PROD" > ./application-prod.yml
        echo "$APPLICATION_CREDENTIALS" > ./application-credentials.yml
        echo "$APPLICATION_RDS" > ./application-rds.yml
        echo "$APPLICATION_S3" > ./application-s3.yml
        echo "$APPLICATION_CRAWL" > ./application-crawl.yml

      env:
        APPLICATION: ${{ secrets.APPLICATION }}
        APPLICATION_PROD: ${{ secrets.APPLICATION_PROD }}
        APPLICATION_CREDENTIALS: ${{ secrets.APPLICATION_CREDENTIALS }}
        APPLICATION_RDS: ${{ secrets.APPLICATION_RDS }}
        APPLICATION_S3: ${{ secrets.APPLICATION_S3 }}
        APPLICATION_CRAWL: ${{ secrets.APPLICATION_CRAWL }}
      shell: bash

    - name: gradlew에 실행 권한 부여
      run: chmod +x ./gradlew

    - name: 프로젝트 빌드
      run: ./gradlew clean build -x test

    - name: 빌드 결과 확인
      run: ls -l build/libs

    - name: web docker build and push
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_SERVICE_REPO }} .
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_SERVICE_REPO }}

    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        script: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_SERVICE_REPO }}
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_NGINX_REPO }}
          docker-compose up -d
          docker image prune -f